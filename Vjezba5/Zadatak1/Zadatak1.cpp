#include<iostream>#include<time.h>#include<random>#include<math.h>#include "Position.hpp"using namespace std;Position::Position() {	x = 0;	y = 0;	z = 0;}void Position::setValue(const double x1, const double y1, const double z1) {	x = x1;	y = y1;	z = z1;}void Position::setRandom(const double& l, const double& u) {	random_device random_device;	std::mt19937 random_engine(random_device());	uniform_real_distribution<double> unif(l, u);	x = unif(random_engine);	y = unif(random_engine);	z = unif(random_engine);	/*	srand(time(NULL));	x = ((u * rand() / RAND_MAX) - l);	y = ((u * rand() / RAND_MAX) - l);	z = ((u * rand() / RAND_MAX) - l); */}void Position::getValue(double& px, double& py, double& pz) const {	px = x; py = y; pz = z;}double Position::distance2D(const Position &t1) const {	return sqrt(pow(x - t1.x,2) + pow(t1.y - y, 2));}double Position::distance3D(const Position &t1) const {	return sqrt(pow(x - t1.x,2) + pow(y - t1.y,2) + pow(z - t1.z,2));}